name: Build Arch ISO from RootFS

on:
  workflow_dispatch:
    inputs:
      username:
        description: "Username for the system"
        required: true
      password:
        description: "Password for the user"
        required: true
      shell:
        description: "Shell path for the user (use /usr/bin/zsh if you have zsh installed)"
        required: true
        default: "/usr/bin/bash"
      timezone:
        description: "Timezone for the system"
        required: true
        default: "UTC"
      iso_name:
        description: "The name of the ISO file to create"
        required: true
        default: "arch-custom.iso"

jobs:
  build_iso:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build RootFS and ISO
        shell: bash
        run: |
          set -e

          echo "Installing required packages..."
          sudo apt update
          sudo apt install -y grub-efi-amd64-bin xorriso zstd debootstrap arch-install-scripts

          echo "Creating rootfs..."
          mkdir -p arch-root
          sudo pacstrap -K arch-root base linux linux-firmware git curl nano ukify btrfs-progs \
            intel-ucode amd-ucode podman toolbox networkmanager openssh sudo zsh dosfstools

          echo "Setting timezone..."
          ln -sf /usr/share/zoneinfo/${{ github.event.inputs.timezone }} arch-root/etc/localtime
          echo "${{ github.event.inputs.timezone }}" > arch-root/etc/timezone

          echo "Creating user..."
          sudo arch-chroot arch-root useradd -m -G wheel -s ${{ github.event.inputs.shell }} ${{ github.event.inputs.username }}
          echo "${{ github.event.inputs.username }}:${{ github.event.inputs.password }}" | sudo arch-chroot arch-root chpasswd

          echo "Creating directory structure for ISO..."
          mkdir -p iso/EFI/boot iso/boot iso/grub

          echo "Copying kernel and initramfs..."
          cp arch-root/boot/vmlinuz-linux iso/boot/
          cp arch-root/boot/initramfs-linux.img iso/boot/

          echo "Creating GRUB config..."
          cat << 'EOF' > iso/grub/grub.cfg
            menuentry "Arch Linux" {
              linux /boot/vmlinuz-linux root=live:CDLABEL=ARCH_CUSTOM rw quiet
              initrd /boot/initramfs-linux.img
            }
            EOF

          echo "Generating GRUB EFI binary..."
          grub-mkstandalone \
            --format=x86_64-efi \
            --output=iso/EFI/boot/bootx64.efi \
            --locales="" \
            --fonts="" \
            "boot/grub/grub.cfg=iso/grub/grub.cfg"

          echo "Building ISO..."
          xorriso -as mkisofs \
            -iso-level 3 \
            -full-iso9660-filenames \
            -volid "ARCH_CUSTOM" \
            -eltorito-alt-boot \
            -e EFI/boot/bootx64.efi \
            -no-emul-boot \
            -isohybrid-gpt-basdat \
            -o ${{ github.event.inputs.iso_name }} \
            iso

      - name: Upload ISO
        uses: actions/upload-artifact@v4
        with:
          name: arch-iso
          path: ${{ github.event.inputs.iso_name }}
